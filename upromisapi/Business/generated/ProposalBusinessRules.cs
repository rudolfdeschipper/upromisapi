/*
**             ------ IMPORTANT ------
** This file was generated by ZeroCode2 on 09/Jan/2021 16:57:43
** DO NOT MODIFY IT, as it can be regenerated at any moment.
** If you need this file changed, change the underlying model or its template.
*/
using System;
using System.Collections.Generic;
using upromiscontractapi.Models;

namespace upromiscontractapi.Business
{
    public partial class ProposalBusinessRules : IProposalBusinessRules
    {
        readonly List<BusinessRuleResult> results = new List<BusinessRuleResult>();

        public List<BusinessRuleResult> Result { get => results; }

        public void ApplyBusinessRules(Proposal Record, ProposalDTO DTORecord, IRepository<Proposal> Repository)
        {
            OnApplyBusinessRules(Record, DTORecord, Repository);
        }

        partial void OnApplyBusinessRules(Proposal Record, ProposalDTO DTORecord, IRepository<Proposal> Repository);

        public bool HasErrors() => results.Exists(r => r.Severity == BusinessRuleResultSeverity.Error);

        public bool HasWarnings() => HasErrors() || results.Exists(r => r.Severity == BusinessRuleResultSeverity.Warning);

        public bool AllOk() => !HasWarnings();
    }
}

